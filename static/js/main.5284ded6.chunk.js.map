{"version":3,"sources":["component/Navbar.js","component/PostList.js","useFetch.js","component/Home.js","component/Create.js","component/PostDetails.js","component/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","style","color","backgroundColor","borderRadius","PostList","posts","title","map","post","id","body","author","useFetch","url","requestOptions","useState","data","setData","isLoading","setIsLoading","isError","setIsError","useEffect","abortFetch","AbortController","fetch","signal","method","redirect","then","response","ok","Error","json","result","catch","e","name","console","log","message","abort","Home","filter","Create","setTitle","setBody","setAuthor","isPending","setIsPending","history","useHistory","onSubmit","preventDefault","headers","JSON","stringify","res","status","statusText","push","type","required","value","onChange","target","disabled","PostDetails","useParams","error","onClick","NotFound","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5284ded6.chunk.js","sourcesContent":["import {Link} from 'react-router-dom';\n\nconst Navbar= () =>{\n    return (\n        <nav className=\"navbar\">\n           <Link to ='/react-blog-test-v2'><h1>The Social Media App</h1></Link>\n            <div className=\"links\">\n                <Link to = \"/react-blog-test-v2\">Home</Link>\n                <Link to = \"/\">Profile</Link>\n                <Link to = \"/\">About</Link>\n                <Link to = \"/create\" style = {{\n                    color:\"white\",\n                    backgroundColor : \"#f1356d\",\n                    borderRadius : '8px'\n                }}>New Post</Link>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;","import {Link} from 'react-router-dom';\nconst PostList = ({posts,title}) =>{\n   // const posts=props.posts;\n\n    return (  \n        <div className= \"post-list\"> \n            <h2>{title}</h2>\n            {posts.map((post)=>(\n            <div className = \"post-preview\" key={post.id}> \n                <Link to={`/posts/${post.id}`}>\n                 <h2>{post.title}</h2>\n                 <p>{post.body}</p>\n                 <p>by {post.author}</p> \n                </Link>\n            </div>\n            ))}\n        </div>\n    );\n}\n\nexport default PostList;","import {useState , useEffect } from 'react';\nconst useFetch = (url,requestOptions) => {\n    const [data,setData] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isError, setIsError] = useState(null);\n\n    useEffect(() => {\n        const abortFetch = new AbortController();\n\n            let requestOptions = {\n            method: 'GET',\n            redirect: 'follow'\n          };\n          fetch(url,{signal : abortFetch.signal},requestOptions)\n            .then(response => {\n                if(!response.ok){\n                    throw Error(\"Could not Fetch data\");\n                }\n                return response.json();\n            })\n            .then(result => {\n                setData(result);\n                setIsLoading(false);\n                setIsError(null);\n            })\n            .catch((e) =>{\n                if(e.name==='AbortError'){\n                    console.log(\"Fetch Aborted\");\n                }else{\n                    console.log(e.message);\n                    setIsError(e.message);\n                }\n            });\n\n        return () => abortFetch.abort();\n    }, [url,requestOptions])\n\n    return { data , isLoading, isError};\n}\n\nexport default useFetch;","//import {useState,useEffect} from 'react';\nimport PostList from './PostList';\nimport useFetch from '../useFetch';\nconst Home = () =>{\n   const {data:posts,isLoading,isError} = useFetch(\"https://backend-react-json-server.herokuapp.com/posts\"); \n    return(\n        <div className=\"Home\">\n        {!isError && isLoading && <div>Loading....</div>}\n        {isError && <div> \n            <h2 style={{color:\"#ff003cf0\"}}>{isError}</h2>\n            </div>\n        }\n        {posts && <PostList posts={posts} title=\"All Posts\"></PostList>}\n        {posts && <PostList posts={posts.filter((post)=>post.author ==='bruce')} title=\"My Posts\"/>}\n        </div>\n    )\n}\nexport default Home;","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Create = () => {\n    const [title,setTitle] =useState('');\n    const [body,setBody] = useState('');\n    const [author,setAuthor] =useState('');\n    const [isPending, setIsPending] = useState(false);\n    const history = useHistory();\n\n    const handleSubmit= (e) => {\n        e.preventDefault();\n        const post = {title , body, author};\n        setIsPending(true);\n        let requestOptions = {\n            method: 'POST',\n            headers: {\"Content-Type\" : \"application/json\"},\n            body : JSON.stringify(post)\n        };\n        let url = \"https://backend-react-json-server.herokuapp.com/posts\"\n          fetch(url, requestOptions)\n          .then((res) => {\n              if(res.status!=201){\n                throw Error(res.statusText);\n              }else{\n                console.log(\"Posted\");\n                setIsPending(false);\n                history.push('/react-blog-test-v2');\n              }\n          })\n          .catch((e) => {\n              console.log(e.message);\n              setIsPending(false);\n          });\n\n    }\n    return (\n        <div className=\"create\">\n            <h2>New Post</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Post Title : </label>\n                <input \n                    type=\"text\"\n                    required\n                    value={title}\n                    onChange={(e)=>setTitle(e.target.value)}\n                />\n                <label>Post Body : </label>\n                <textarea\n                    value={body}\n                    onChange={(e)=>setBody(e.target.value)}\n                    required\n                />\n                <label>Author Name : </label>\n                <input \n                    value={author}\n                    onChange={(e)=>setAuthor(e.target.value)}\n                    type=\"text\"\n                    required\n                />\n               {!isPending&&<button type='submit'>\n                    Post\n                </button>}\n                {isPending&&<button disabled>\n                    Please Wait...    \n                </button>}\n            </form>\n        </div>\n    );\n}\nexport default Create;\n","import {useParams} from 'react-router-dom';\nimport useFetch from '../useFetch';\nimport {useHistory} from 'react-router-dom';\nconst PostDetails = () =>{\n    const { id } = useParams();\n    const {data:post ,isError:error, isLoading} = useFetch(\"https://backend-react-json-server.herokuapp.com/posts/\"+id);\n    const history = useHistory();\n    const handleDelete = () => {\n        fetch('https://backend-react-json-server.herokuapp.com/posts'+post.id,{\n            method:'DELETE'\n        }).then(()=>{\n            history.push('/');\n        }).catch((e)=>{\n            console.log(e);\n        });\n    }\n    return (\n        <div className=\"post-details\">\n            {!error&&isLoading&&<div>Loading Post...</div>}\n            {error &&<div>{error}!!{<br></br>}Post not found</div>}\n            {post &&(\n                <article>\n                    <h2>{post.title}</h2>\n                    <p>posted by {post.author}</p>\n                    <div>{post.body}</div>\n                    <button onClick={handleDelete}>Delete</button>\n                </article>\n            )}\n        </div>\n    );\n}\nexport default PostDetails;","import {Link} from 'react-router-dom';\nconst NotFound = () =>{\n    return (\n        <div className=\"not-found\">\n            <h2>Broken Link</h2>\n            <p>The Page you requested not found</p>\n            <Link to = '/react-blog-test-v2'>Home</Link>\n        </div>\n    );\n}\n\nexport default NotFound;","import './App.css';\nimport Navbar from './component/Navbar';\nimport Home from './component/Home';\nimport Create from './component/Create';\nimport PostDetails from './component/PostDetails';\nimport NotFound from './component/NotFound';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\nfunction App() {\n  return (\n   <Router>\n      <div className=\"App\">\n        <Navbar/>\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/react-blog-test-v2\">\n              <Home></Home>\n            </Route>\n            <Route path=\"/create\">\n              <Create></Create>\n            </Route>\n            <Route path=\"/posts/:id\">\n              <PostDetails></PostDetails>\n            </Route>\n            <Route path=\"*\">\n              <NotFound></NotFound>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}