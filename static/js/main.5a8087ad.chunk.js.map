{"version":3,"sources":["contexts/UserProfileID.js","component/Navbar.js","component/PostList.js","useFetch.js","component/Home.js","component/Create.js","component/PostDetail/PostDetail.js","component/NotFound.js","component/ProfileDetails/ProfileDetails.js","component/Login/login.svg","component/Login/Login.js","component/Login/Register.js","component/Home/Home.js","component/ErrorBoundary/ErrorBoundary.js","component/Profile/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["UserProfileID","createContext","UserProfileIDContextProvider","state","isLoggedIn","profile_id","accessToken","LoggedIn","p_id","setState","Loggout","SetAccessToken","token","localStorage","setItem","JSON","stringify","this","Provider","value","props","children","Component","Navbar","useContext","className","to","style","color","backgroundColor","borderRadius","onClick","PostList","posts","title","map","post","id","body","author_id","author","useFetch","url","requestOptions","useState","data","setData","isLoading","setIsLoading","isError","setIsError","useEffect","abortFetch","AbortController","reqOps","usefHeaders","headers","append","signal","fetch","then","response","ok","Error","json","result","catch","e","name","console","log","message","abort","Home","Headers","marginBottom","margin","filter","Create","setTitle","setBody","setAuthor","isPending","setIsPending","history","useHistory","inputRef","useRef","current","focus","onSubmit","preventDefault","createPostHeader","method","Authorization","res","status","statusText","push","err","type","required","onChange","target","ref","disabled","PostDetail","abortController","window","handleDelete","match","params","postDetailHeaders","context","redirect","postData","bind","homeHeaders","fetchPosts","contextType","withRouter","NotFound","ProfileDetails","profileData","email","Login","setEmail","password","setPassword","isInvalidUser","setIsInvalidUser","src","loginImg","alt","user","access_token","htmlFor","placeholder","width","height","marginTop","fontSize","Register","username","setUsername","isExists","profile","profHeaders","borderBlockColor","ErrorBoundary","hasError","error","info","Profile","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a8087ad.chunk.js","sourcesContent":["import { Component, createContext } from \"react\";\n\nexport const UserProfileID = createContext();\n\nclass UserProfileIDContextProvider extends Component{\n    state = {\n        isLoggedIn : false,\n        profile_id : null,\n        accessToken:null\n    }\n    LoggedIn = (p_id) => {\n        this.setState({\n            isLoggedIn : true,\n            profile_id : p_id\n        })\n    }\n    Loggout = () =>{\n        this.setState({\n            isLoggedIn : false,\n            profile_id : null,\n            accessToken :null\n        })\n    }\n    SetAccessToken= (token,p_id) =>{\n        this.setState({\n            isLoggedIn:true,\n            profile_id : p_id,\n            accessToken:token\n        })\n    }\n    componentDidMount(){\n        /*const localData = JSON.parse(localStorage.getItem('UserProfileData'));\n        if(localData){\n            this.setState(localData);\n        }else{\n            this.setState({\n                isLoggedIn : false,\n                profile_id : null,\n                accessToken:null\n            })\n        }*/\n    }\n    componentDidUpdate(){\n        localStorage.setItem('UserProfileData',JSON.stringify(this.state))\n    }\n    render(){\n        return (\n            <UserProfileID.Provider value={{...this.state,LoggedIn:this.LoggedIn,Loggout:this.Loggout,SetAccessToken:this.SetAccessToken}}>\n                {this.props.children}\n            </UserProfileID.Provider>\n        );\n    }\n}\n\nexport default UserProfileIDContextProvider;","import { useContext } from 'react';\nimport {Link} from 'react-router-dom';\nimport { UserProfileID } from '../contexts/UserProfileID';\n\nconst Navbar= () =>{\n    const {profile_id,isLoggedIn,Loggout} = useContext(UserProfileID);\n    return (\n        <nav className=\"navbar\">\n           <Link to ='/react-blog-test-v2'><h1>The Social Media App</h1></Link>\n            <div className=\"links\">\n                <Link to = \"/react-blog-test-v2\">Home</Link>\n                <Link to = \"/profile\">Profile</Link>\n                <Link to = \"/\">About</Link>\n                {isLoggedIn&&<Link to = \"/create\" style = {{\n                    color:\"white\",\n                    backgroundColor : \"#f1356d\",\n                    borderRadius : '8px'\n                }}>New Post</Link>}\n                {!isLoggedIn&&<Link to = \"/login\" style = {{\n                    color:\"white\",\n                    backgroundColor : \"#f1356d\",\n                    borderRadius : '8px'\n                }}>Login</Link>}\n                {profile_id&&<Link to = \"#\" style = {{\n                    color:\"white\",\n                    backgroundColor : \"#f1356d\",\n                    borderRadius : '8px'\n                }} onClick={Loggout}>Logout</Link>}\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;","import {Link} from 'react-router-dom';\nconst PostList = ({posts,title}) =>{\n   // const posts=props.posts;\n    return (  \n        <div className= \"post-list\"> \n            <h2>{title}</h2>\n            {posts.map((post)=>(\n                <Link to={`/posts/${post.id}`} key={post.id}>\n                    <div className = \"post-preview\"> \n                        <h2>{post.title}</h2>\n                        <p>{post.body}</p>\n                        <p>by <Link to={`/profile/${post.author_id}`} className=\"link-highlight\">{post.author}</Link></p> \n                    </div>\n                </Link>\n            ))}\n        </div>\n    );\n}\n\nexport default PostList;","import {useState , useEffect } from 'react';\nconst useFetch = (url,requestOptions) => {\n    const [data,setData] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isError, setIsError] = useState(null);\n\n    useEffect(() => {\n        const abortFetch = new AbortController();\n          let reqOps = requestOptions;\n          let usefHeaders = requestOptions.headers;\n          usefHeaders.append('signal',abortFetch.signal);\n          reqOps.headers=usefHeaders;\n          fetch(url,reqOps)\n            .then(response => {\n                if(!response.ok){\n                    throw Error(\"Could not Fetch data\");\n                }\n                return response.json();\n            })\n            .then(result => {\n                setData(result);\n                setIsLoading(false);\n                setIsError(null);\n            })\n            .catch((e) =>{\n                if(e.name==='AbortError'){\n                    console.log(\"Fetch Aborted\");\n                }else{\n                    console.log(e.message);\n                    setIsError(e.message);\n                }\n            });\n\n        return () => abortFetch.abort();\n    }, [url,requestOptions])\n\n    return { data , isLoading, isError};\n}\n\nexport default useFetch;","//import {useState,useEffect} from 'react';\nimport PostList from './PostList';\nimport useFetch from '../useFetch';\nimport { Link } from 'react-router-dom';\nconst Home = () =>{\n   const {data:posts,isLoading,isError} = useFetch(\"https://backend-react-json-server.herokuapp.com/posts\",{headers:new Headers()}); \n    return(\n        <div className=\"Home\">\n            <div className=\"moved-out\" style={\n                {\n                    marginBottom:\"1rem\"\n                }}>\n                <h2 style={{color:\"#ff003cf0\", margin:'1rem'}}>This Page is Depreciated</h2>\n                <Link to=\"/react-blog-test-v2\" className=\"link-highlight\">Click Here </Link>to Move to New Home Page\n            </div>\n        {!isError && isLoading && <div>Loading....</div>}\n        {isError && <div> \n            <h2 style={{color:\"#ff003cf0\"}}>{isError}</h2>\n            </div>\n        }\n        {posts && <PostList posts={posts} title=\"All Posts\"></PostList>}\n        {posts && <PostList posts={posts.filter((post)=>post.author ==='bruce')} title=\"My Posts\"/>}\n        </div>\n    )\n}\nexport default Home;","import { useContext, useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserProfileID } from \"../contexts/UserProfileID\";\n\nconst Create = () => {\n    const {profile_id,accessToken} = useContext(UserProfileID);\n    const [title,setTitle] =useState('');\n    const [body,setBody] = useState('');\n    const [author,setAuthor] =useState('');\n    const [isPending, setIsPending] = useState(false);\n    const history = useHistory();\n    const inputRef = useRef();\n\n    useEffect(() => {\n        inputRef.current.focus();\n    }, [inputRef]);\n\n    const handleSubmit= (e) => {\n        e.preventDefault();\n        const post = {title , body, author,author_id: profile_id};\n        setIsPending(true);\n        var createPostHeader = new Headers();\n        createPostHeader.append(\"Authorization\", \"Bearer \"+accessToken);\n        createPostHeader.append(\"Content-Type\", \"application/json\");\n        let requestOptions = {\n            method: 'POST',\n            Authorization : \"Bearer \"+accessToken,\n            headers: createPostHeader,\n            body : JSON.stringify(post)\n        };\n        let url = \"https://backend-react-json-server-auth.herokuapp.com/posts\"\n          fetch(url, requestOptions)\n          .then((res) => {\n              if(res.status!==201){\n                throw Error(res.statusText);\n              }else{\n                console.log(\"Posted\");\n                setIsPending(false);\n                history.push('/react-blog-test-v2');\n              }\n          })\n          .catch((err) => {\n              console.log(err.message);\n              setIsPending(false);\n          });\n\n    }\n    return (\n        <div className=\"create\">\n            <h2>New Post</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Post Title : </label>\n                <input \n                    type=\"text\"\n                    required\n                    value={title}\n                    onChange={(e)=>setTitle(e.target.value)}\n                    ref={inputRef}\n                />\n                <label>Post Body : </label>\n                <textarea\n                    value={body}\n                    onChange={(e)=>setBody(e.target.value)}\n                    required\n                />\n                <label>Author Name : </label>\n                <input \n                    value={author}\n                    onChange={(e)=>setAuthor(e.target.value)}\n                    type=\"text\"\n                    required\n                />\n               {profile_id&&!isPending&&<button type='submit'>\n                    Post\n                </button>}\n                {isPending&&<button disabled>\n                    Please Wait...    \n                </button>}\n                {!profile_id&&<h2 className=\"error\">Login to Post</h2>}\n            </form>\n        </div>\n    );\n}\nexport default Create;\n","import React, { Component } from 'react'\nimport { withRouter } from \"react-router\";\nimport { Link } from 'react-router-dom';\nimport { UserProfileID } from '../../contexts/UserProfileID';\nclass PostDetail extends Component {\n    static contextType = UserProfileID;\n    constructor(props){\n        super(props);\n        this.state={\n            postData : null,\n            isLoading : true,\n            isError : null\n        }\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n    abortController = new window.AbortController();\n    fetchPosts(id){\n        const {accessToken} = this.context;\n        let url =\"https://backend-react-json-server-auth.herokuapp.com/posts/\"+id;\n        let homeHeaders = new Headers();\n        homeHeaders.append(\"Authorization\",\"Bearer \"+accessToken);\n        homeHeaders.append(\"signal\",this.abortController.signal);\n        let requestOptions= {\n            method: 'GET',\n            headers:homeHeaders,\n            redirect: 'follow'\n        };\n        fetch(url,requestOptions)\n        .then(response => {\n            if(!response.ok){\n                throw Error(\"Could not Fetch data\");\n            }\n            return response.json();\n        })\n        .then(result => {\n            this.setState({\n                postData : result,\n                isLoading : false,\n                isError:false\n            })\n        })\n        .catch((e) =>{\n            if(e.name==='AbortError'){\n                console.log(\"Fetch Aborted\");\n            }else{\n                console.log(e.message);\n                this.setState({\n                    isError:e.message\n                });\n            }\n        });\n    }\n    handleDelete = () => {\n        const id = this.props.match.params.id;\n        let postDetailHeaders = new Headers();\n        const {accessToken} = this.context;\n        postDetailHeaders.append(\"Authorization\",\"Bearer \"+accessToken);\n        postDetailHeaders.append(\"signal\",this.abortController.signal);\n        let requestOptions= {\n            method: 'DELETE',\n            headers:postDetailHeaders,\n            redirect: 'follow'\n        };\n        fetch('https://backend-react-json-server-auth.herokuapp.com/posts/'+id,requestOptions)\n        .then(()=>{\n            //history.push('/react-blog-test-v2');\n            console.log(\"Deleted Successfully\");\n            const { history } = this.props;\n            if(history) history.push('/react-blog-test-v2');\n            \n        }).catch((e)=>{\n            console.log(e);\n        });\n    }\n    componentDidMount(){\n        const id = this.props.match.params.id;\n        const {accessToken} = this.context;\n        if(accessToken){\n            this.fetchPosts(id);\n        }\n    }\n    componentWillUnmount(){\n        this.abortController.abort();\n    }\n    render() {\n        return (\n            <div className=\"post-details\">\n            {!this.state.isError&&this.state.isLoading&&<div>Loading Post...</div>}\n            {this.state.isError&&<div>{this.state.isError}!!{<br></br>}Post not found</div>}\n            {this.state.postData &&(\n                <article>\n                    <h2>{this.state.postData.title}</h2>\n                    <p>posted by <Link className=\"link-highlight\" to={`/profile/${this.state.postData.author_id}`}>{this.state.postData.author}</Link></p>\n                    <div>{this.state.postData.body}</div>\n                    <button onClick={this.handleDelete}>Delete</button>\n                </article>\n            )}\n        </div>\n        )\n    }\n}\n\nexport default withRouter(PostDetail);\n","import {Link} from 'react-router-dom';\nconst NotFound = () =>{\n    return (\n        <div className=\"not-found\">\n            <h2>Broken Link</h2>\n            <p>The Page you requested not found</p>\n            <Link to = '/react-blog-test-v2'>Home</Link>\n        </div>\n    );\n}\n\nexport default NotFound;","import React, { Component } from 'react'\nimport { UserProfileID } from '../../contexts/UserProfileID';\nimport { withRouter } from \"react-router\";\nclass ProfileDetails extends Component {\n    static contextType = UserProfileID;\n    constructor(props){\n        super(props);\n        this.state={\n            profileData : null,\n            isLoading : true,\n            isError : null\n        }\n    }\n    abortController = new window.AbortController();\n    fetchPosts(id){\n        const {accessToken} = this.context;\n        let url =\"https://backend-react-json-server-auth.herokuapp.com/profile/\"+id;\n        let homeHeaders = new Headers();\n        homeHeaders.append(\"Authorization\",\"Bearer \"+accessToken);\n        homeHeaders.append(\"signal\",this.abortController.signal);\n        let requestOptions= {\n            method: 'GET',\n            headers:homeHeaders,\n            redirect: 'follow'\n        };\n        fetch(url,requestOptions)\n        .then(response => {\n            if(!response.ok){\n                throw Error(\"Could not Fetch data\");\n            }\n            return response.json();\n        })\n        .then(result => {\n            this.setState({\n                profileData : result,\n                isLoading : false,\n                isError:false\n            })\n        })\n        .catch((e) =>{\n            if(e.name==='AbortError'){\n                console.log(\"Fetch Aborted\");\n            }else{\n                console.log(e.message);\n                this.setState({\n                    isError:e.message\n                });\n            }\n        });\n    }\n    componentDidMount(){\n        const id = this.props.match.params.id;\n        const {accessToken} = this.context;\n        if(accessToken){\n            this.fetchPosts(id);\n        }\n    }\n    componentWillUnmount(){\n        this.abortController.abort();\n    }\n    render() {\n        const {accessToken}=this.context;\n        return (\n            <div className=\"profile-container\">\n            {accessToken&&!this.state.isError&&this.state.isLoading&&<div>Loading Profile...</div>}\n            {accessToken&&this.state.isError &&<div>{this.state.isError}!!{<br></br>}Profile not found</div>}\n            {this.state.profileData &&(\n                <div className=\"profile-data\"> \n                    <h2>Name : {this.state.profileData.name}</h2>\n                    <p>Email : {this.state.profileData.email}</p>\n                </div>\n            )}\n            {!accessToken&&<h1 className=\"error\">Please Login</h1>}\n        </div>\n        )\n    }\n}\n\nexport default withRouter(ProfileDetails);\n","export default __webpack_public_path__ + \"static/media/login.103b30a1.svg\";","import React, { useContext, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { UserProfileID } from '../../contexts/UserProfileID';\nimport loginImg from './login.svg'\nimport \"./style.scss\";\n\nconst Login = () => {\n    const {isLoggedIn,SetAccessToken} = useContext(UserProfileID);\n    const [email,setEmail] = useState('');\n    const [password,setPassword] = useState('');\n    const [isPending, setIsPending] = useState(false);\n    const [isInvalidUser,setIsInvalidUser] = useState(false);\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        const user= {email,password}\n        setIsPending(true);\n        let requestOptions = {\n            method: 'POST',\n            headers: {\"Content-Type\" : \"application/json\"},\n            body : JSON.stringify(user)\n        };\n        let url = \"https://backend-react-json-server-auth.herokuapp.com/auth/login\"\n          fetch(url, requestOptions)\n          .then((res) => {\n              if(res.status===401){\n                setIsInvalidUser(true);\n              }\n              if(res.status!==200){\n                throw Error(res.statusText);\n              }else{\n                console.log(\"Verified successfully\");\n                return res.json();\n              }\n          })\n          .then(result =>{\n            SetAccessToken(result.access_token,result.id);\n            console.log(\"Logged In successfully\");\n          })\n          .catch((err) => {\n            console.log(err.message);\n            setIsPending(false);\n        });\n    }\n    return (\n        <div className=\"base-container\">\n        <div className=\"header\">Login</div>\n        {!isLoggedIn&&<div className=\"content\">\n        {isInvalidUser&&<h2 className=\"error\">Invalid Username or Password</h2>}\n        <div className=\"image\">\n            <img src={loginImg} alt=\"just a decoration\"/>\n        </div>\n        <form onSubmit={handleSubmit}>\n            <div className=\"form\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input \n                        type=\"email\" \n                        name=\"email\" \n                        placeholder=\"Email\" \n                        value={email}\n                        onChange={(e)=>setEmail(e.target.value)}  \n                        />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input \n                        type=\"password\" \n                        name=\"password\" \n                        placeholder=\"password\" \n                        value={password}\n                        onChange={(e)=>setPassword(e.target.value)}    \n                        />\n                </div>\n            </div>\n            {!isLoggedIn&&!isPending&&<button type=\"submit\" style = {{\n                    color:\"white\",\n                    backgroundColor : \"#f1356d\",\n                    borderRadius : '8px',\n                    width: '7rem',\n                    height: '3rem'\n            }}>\n                Login\n            </button>}\n        </form>\n        <Link to=\"/register\" style = {{\n               color:'#333',\n               marginTop: '1rem',\n               fontSize:'1.2rem'\n            }}>\n           Don't Have an account?? Register!!\n        </Link>\n        </div>}\n        {isLoggedIn&&<h2 style={\n            {\n                margin:'1rem'\n            }\n        }>You are already Logged In</h2>}\n        </div>\n    );\n}\n\nexport default Login\n","import React, { useContext, useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { UserProfileID } from '../../contexts/UserProfileID';\nimport loginImg from './login.svg';\nimport './style.scss';\n\nconst Register = () => {\n    const {isLoggedIn,SetAccessToken} = useContext(UserProfileID);\n    const [username,setUsername] = useState('');\n    const [email,setEmail] = useState('');\n    const [password,setPassword] = useState('');\n    const [isPending, setIsPending] = useState(false);\n    const history = useHistory();\n    \n    const handleSubmit = (e) =>{\n        let isExists=false;\n        let token=null;\n        e.preventDefault();\n        const user= {email,password}\n        let profile = {name:username , email};\n        setIsPending(true);\n        let requestOptions = {\n            method: 'POST',\n            headers: {\"Content-Type\" : \"application/json\"},\n            body : JSON.stringify(user)\n        };\n        let url = \"https://backend-react-json-server-auth.herokuapp.com/auth/register\";\n          fetch(url, requestOptions)\n          .then((res) => {\n              if(res.status!==200){\n                isExists=true;\n                throw Error(res.statusText);\n              }else{\n                console.log(\"New User Added\");\n                return res.json();\n              }\n          }).then(result => {\n            \n             token=result.access_token;\n             if(!isExists){\n                let profHeaders = new Headers();\n                profHeaders.append(\"Authorization\",\"Bearer \"+token);\n                profHeaders.append(\"Content-Type\",\"application/json\")\n                requestOptions = {\n                    method: 'POST',\n                    headers: profHeaders,\n                    body : JSON.stringify(profile)\n                };\n                url = \"https://backend-react-json-server-auth.herokuapp.com/profile/\"\n                 fetch(url, requestOptions)\n                .then((res) => {\n                  if(res.status!==201){\n                    throw Error(res.statusText);\n                  }else{\n                    console.log(\"New Profile Added\");\n                    setIsPending(false);\n                    // history.push('/react-blog-test-v2');\n                    return res.json();\n                  }\n                }).then(result=>{\n                    SetAccessToken(token,result.id);\n                    console.log(\"Registered Successfully\");\n                    history.push('/react-blog-test-v2');\n                })\n                .catch((err) => {\n                  console.log(err.message);\n                  setIsPending(false);\n                });\n            }\n          })\n          .catch((err) => {\n              console.log(err.message);\n              setIsPending(false);\n          });\n    }\n    return (\n        <div className=\"base-container\">\n        <div className=\"header\"><h2>Register</h2></div>\n        {!isLoggedIn&&<div className=\"content\">\n        <div className=\"image\">\n            <img src={loginImg} alt=\"just a decoration\"/>\n        </div>\n        <form onSubmit={handleSubmit}>\n        <div className=\"form\">\n             <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <input \n                    type=\"text\" \n                    name=\"username\" \n                    placeholder=\"username\" \n                    value={username}\n                    onChange={(e)=>setUsername(e.target.value)}\n                    required\n                />\n             </div>\n             <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <input \n                    type=\"email\" \n                    name=\"email\" \n                    placeholder=\"email\" \n                    value={email}\n                    onChange={(e)=>setEmail(e.target.value)}\n                    required\n                />\n             </div>\n             <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input \n                type=\"password\" \n                name=\"password\" \n                placeholder=\"password\" \n                value={password}\n                onChange={(e)=>setPassword(e.target.value)}\n                required\n              />\n             </div>\n        </div>\n\n        {!isLoggedIn&&!isPending&&<button type=\"submit\" style = {{\n                    color:\"white\",\n                    backgroundColor : \"#f1356d\",\n                    borderRadius : '8px',\n                    width: '7rem',\n                    height: '3rem',\n                    borderBlockColor:'pinks'\n        }}>\n            Register\n        </button>}\n        </form>\n        </div>}\n        {isLoggedIn&&<h1>You already have an account!! You Are Logged In</h1>}\n        </div>\n    );\n}\n\n\nexport default Register;","import React, { Component } from 'react'\nimport { UserProfileID } from '../../contexts/UserProfileID';\n// import PostList from '../PostList';\n// import useFetch from '../../useFetch';\nimport PostList from '../PostList';\n\nclass Home extends Component {\n    static contextType = UserProfileID;\n    constructor(props){\n        super(props);\n        this.state={\n            posts : [],\n            isLoading : true,\n            isError : null\n        }\n    }\n    abortController = new window.AbortController();\n    fetchPosts(){\n        const {accessToken} = this.context;\n        let url =\"https://backend-react-json-server-auth.herokuapp.com/posts\";\n        let homeHeaders = new Headers();\n        homeHeaders.append(\"Authorization\",\"Bearer \"+accessToken);\n        homeHeaders.append(\"signal\",this.abortController.signal);\n        let requestOptions= {\n            method: 'GET',\n            headers:homeHeaders,\n            redirect: 'follow'\n        };\n        fetch(url,requestOptions)\n        .then(response => {\n            if(!response.ok){\n                throw Error(\"Could not Fetch data\");\n            }\n            return response.json();\n        })\n        .then(result => {\n            this.setState({\n                posts : result,\n                isLoading : false,\n                isError:false,\n            })\n        })\n        .catch((e) =>{\n            if(e.name==='AbortError'){\n                console.log(\"Fetch Aborted\");\n            }else{\n                console.log(e.message);\n                this.setState({\n                    isError:e.message\n                });\n            }\n        });\n    }\n    componentDidMount(){\n        const {accessToken} = this.context;\n        console.log(accessToken);\n        if(accessToken){\n            this.fetchPosts();\n        }\n    }\n    componentWillUnmount() {\n        this.abortController.abort();\n    }\n    render() {\n        const {isLoggedIn, profile_id,accessToken } = this.context;\n        return (\n            <div className=\"home\">\n                {isLoggedIn&&<h2>Welcome Back</h2>}\n                <h1>Home Page</h1>\n                {!this.state.isError && this.state.isLoading && accessToken&&<div>Loading....</div>}\n                {this.state.isError && \n                    <div> \n                        <h2 style={{color:\"#ff003cf0\"}}>{this.state.isError}</h2>\n                    </div>\n                }\n                {this.state.posts && <PostList posts={this.state.posts} title=\"All Posts\"></PostList>}\n                {profile_id&&this.state.posts && <PostList posts={this.state.posts.filter((post)=>post.author_id ===profile_id)} title=\"My Posts\"/>}\n                {!accessToken&&<h1 className=\"error\">Please Login</h1>}\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, { Component } from 'react'\n\nclass ErrorBoundary extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            hasError : false\n        }\n    }\n    static getDerivedStateFromError(error){\n        return {\n            hasError: true\n        }\n    }\n    componentDidCatch(error,info){\n        console.log(error);\n        console.log(info);\n    }\n    render() {\n        if(this.state.hasError){\n            return <h1>Something Went Wrong</h1>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { UserProfileID } from '../../contexts/UserProfileID';\n\nclass Profile extends Component {\n    static contextType = UserProfileID;\n    constructor(props){\n        super(props);\n        this.state={\n            profileData : null,\n            isLoading : true,\n            isError : null\n        }\n    }\n    abortController = new window.AbortController();\n    fetchPosts(){\n        const {accessToken,profile_id} = this.context;\n        let url =\"https://backend-react-json-server-auth.herokuapp.com/profile/\"+profile_id;\n        let homeHeaders = new Headers();\n        homeHeaders.append(\"Authorization\",\"Bearer \"+accessToken);\n        homeHeaders.append(\"signal\",this.abortController.signal);\n        let requestOptions= {\n            method: 'GET',\n            headers:homeHeaders,\n            redirect: 'follow'\n        };\n        fetch(url,requestOptions)\n        .then(response => {\n            if(!response.ok){\n                throw Error(\"Could not Fetch data\");\n            }\n            return response.json();\n        })\n        .then(result => {\n            this.setState({\n                profileData : result,\n                isLoading : false,\n                isError:false\n            })\n        })\n        .catch((e) =>{\n            if(e.name==='AbortError'){\n                console.log(\"Fetch Aborted\");\n            }else{\n                console.log(e.message);\n                this.setState({\n                    isError:e.message\n                });\n            }\n        });\n    }\n    componentDidMount(){\n        const {accessToken} = this.context;\n        if(accessToken){\n            this.fetchPosts();\n        }\n    }\n    componentWillUnmount(){\n        this.abortController.abort();\n    }\n    render() {\n        const {profile_id} = this.context; \n        return (\n            <div>\n            {!profile_id&&<h1><Link to=\"/login\"  className=\"link-highlight\">Please Login</Link></h1>}\n            {profile_id&&this.state.isError&&<h2>Error Occured</h2>}\n            {profile_id&&this.state.isLoading&&<h2>Loading!!...</h2>}\n            <h2>Profile</h2>\n            {profile_id&&<div className=\"profile-container\">\n               <p> Name : {!this.state.isError&&this.state.profileData&&this.state.profileData.name}</p>\n               <p> Status : {}</p>\n            </div>}\n        </div>\n        )\n    }\n}\n\nexport default Profile;\n","import './App.css';\nimport Navbar from './component/Navbar';\nimport Home from './component/Home';\nimport Create from './component/Create';\nimport PostDetails from './component/PostDetail/PostDetail';\nimport NotFound from './component/NotFound';\nimport ProfileDetails from './component/ProfileDetails/ProfileDetails';\nimport Login from './component/Login/Login';\nimport Register from './component/Login/Register';\nimport HomeNew from './component/Home/Home';\nimport ErrorBoundary from './component/ErrorBoundary/ErrorBoundary';\nimport NewProfile from './component/Profile/Profile';\n\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\nimport UserProfileIDContextProvider from './contexts/UserProfileID';\n\nfunction App() {\n  return (\n   <Router>\n      <div className=\"App\">\n      <UserProfileIDContextProvider>\n        <Navbar/>\n        <div className=\"content\">\n        <ErrorBoundary>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home/>\n            </Route>\n            <Route exact path=\"/react-blog-test-v2\">\n              <HomeNew/>\n            </Route>\n            <Route path=\"/login\">\n              <Login/>\n            </Route>\n            <Route path=\"/register\">\n              <Register></Register>\n            </Route>\n            <Route path=\"/create\">\n              <Create></Create>\n            </Route>\n            <Route exact path=\"/profile\">\n              <NewProfile/>\n            </Route>\n            <Route exact path=\"/profile/:id\">\n              <ProfileDetails></ProfileDetails>\n            </Route>\n            <Route path=\"/posts/:id\">\n              <PostDetails></PostDetails>\n            </Route>\n            <Route path=\"/new-home\">\n              <HomeNew/>\n            </Route>\n            <Route path=\"*\">\n              <NotFound></NotFound>\n            </Route>\n          </Switch>\n        </ErrorBoundary>\n        </div>\n        </UserProfileIDContextProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}